const int pinSensor = 2;  // Pin digital al que está conectado el sensor de flujo
volatile int contadorPulsos = 0;  // Contador de pulsos
float tasaFlujo = 0.0;  // Tasa de flujo en L/min
float flujoLitros = 0.0; // Tasa de flujo en litros
unsigned int flujoMililitros = 0;  // Flujo acumulado en mL
unsigned long totalMililitros = 0;  // Flujo total acumulado en mL
unsigned long tiempoAntiguo = 0;  // Tiempo desde la última medición

void setup()
{
  pinMode(pinSensor, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(pinSensor), contadorPulsosISR, FALLING);
  Serial.begin(9600);
}

void loop()
{
  unsigned long tiempoActual = millis();
  if ((tiempoActual - tiempoAntiguo) > 1000)  // Cada segundo
  {
    detachInterrupt(digitalPinToInterrupt(pinSensor));
    tasaFlujo = contadorPulsos / 7.5;  // Cálculo de la tasa de flujo en L/min
    flujoMililitros = (tasaFlujo / 60) * 1000;  // Cálculo del flujo acumulado en mL
    flujoLitros = (tasaFlujo / 60); // Cálculo del flujo acumulado en litros
    totalMililitros += flujoMililitros;  // Acumulación del flujo total en mL
    contadorPulsos = 0;  // Reiniciar el contador de pulsos
    tiempoAntiguo = tiempoActual;  // Actualizar el tiempo anterior
    
    Serial.print("Tasa de flujo: ");
    Serial.print(tasaFlujo);
    Serial.print(" L/min - Flujo acumulado: ");
    Serial.print(totalMililitros);
    Serial.println(" mL");
    attachInterrupt(digitalPinToInterrupt(pinSensor), contadorPulsosISR, FALLING);
  }
}

void contadorPulsosISR()
{
  contadorPulsos++;